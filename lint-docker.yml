lint:docker:
  stage: lint
  image: linuxbandit/hadolint-reviewdog:v1.0.0
  script:
    - |

      COMMAND_TO_RUN="hadolint"
      COMMAND_TO_RUN+=( --trusted-registry "docker.io" --trusted-registry "${CI_REGISTRY}" )

      if [[ -z "${IGNORE_DOCKER_LINT}" ]]; then
        IGNORE_DOCKER_LINT=( DL3012 )
      fi
      for ign in "${IGNORE_DOCKER_LINT[@]}"; do
        COMMAND_TO_RUN+=( --ignore "${ign}" )
      done

      # Find docker files in a way similar to docker.yml

      if [ -z "${IMAGES}" ]; then
        COMMAND_TO_RUN+=( ./Dockerfile )
      else
        if [ -z "${DOCKERFILES_DIR}" ]; then
          DOCKERFILES_DIR=docker
        fi

        for image in ${IMAGES[@]}; do
          COMMAND_TO_RUN+=( ./"${DOCKERFILES_DIR}/${image}"/Dockerfile )
        done
      fi

      echo
      echo "-> Linting Dockerfile:"
      echo

      if [ "${ENABLE_REVIEWDOG}" = "1" ]; then

        echo
        echo "-> Enabled Review Dog!"
        echo

        if [ -z "${REVIEWDOG_GITLAB_API_TOKEN}" ]; then
          echo
          echo "-> [WARNING] Missing 'REVIEWDOG_GITLAB_API_TOKEN' variable!"
          echo
          exit 1
        fi

        if [ -z "${REVIEWDOG_LEVEL}" ]; then
          REVIEWDOG_LEVEL="warning"
        fi

        "${COMMAND_TO_RUN[@]}" | reviewdog -name="Hadolint linter" \
          -efm="%f:%l: %m" -diff="git diff master" -reporter=gitlab-mr-discussion -level="${INPUT_LEVEL}"

      else
        "${COMMAND_TO_RUN[@]}"
      fi

      echo
      echo "-> Dockerfile(s) checked!"
      echo
