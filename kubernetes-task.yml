.exec:task:
  image: gdiener/ci-image-gcp:v1.0.0
  stage: deploy
  script:
    - |
      # CLUSTER CONNECTION PHASE

      for var in "GOOGLE_KEY" "CLUSTER_ZONE" "CLUSTER_NAME" "NAMESPACE" "GOOGLE_PROJECT"; do
          if [ -z "${!var}" ]; then
            echo
            echo "-> [WARNING] Missing '${var}' variable!"
            echo
            exit 1
          fi
      done

      echo "${GOOGLE_KEY}" > /tmp/key.json

      gcloud auth activate-service-account --key-file /tmp/key.json

      gcloud config set project "${GOOGLE_PROJECT}"

      echo
      echo "-> Google project '${GOOGLE_PROJECT}' configured!"
      echo

      gcloud container clusters get-credentials --zone "${CLUSTER_ZONE}" "${CLUSTER_NAME}"

      kubectl config set-context $(kubectl config current-context) --namespace="${NAMESPACE}"

      echo
      kubectl cluster-info
      echo
    - |
      # SET SHELL SCRIPT

      function kupdate {
          local resource=${1}
          local name=${2}

          if [ -z "${2}" ]; then
              name=${1}
              resource="deployment"
          fi

          kubectl patch ${resource} ${name} -p \
              "{\"spec\":{\"template\":{\"metadata\":{\"annotations\":{\"kupdate/date\":\"`date +'%s'`\"}}}}}"
      }

    - |
      # EXEC THE SCRIPT TO KUPDATE

      eval "${KUPDATE_SCRIPT}"

.exec:production:task:
  extends: .exec:task
  only:
    - /^v.+$/i
  except:
    - branches

exec:production:task:
  extends: .exec:production:task
  variables:
    GOOGLE_KEY: ${GOOGLE_KEY_PRODUCTION}
    CLUSTER_NAME: ${CLUSTER_NAME_PRODUCTION}
    CLUSTER_ZONE: ${CLUSTER_ZONE_PRODUCTION}
  before_script:
    - |
      # CHECK VARIABLES PHASE
      for var in "GOOGLE_KEY_PRODUCTION" "CLUSTER_NAME_PRODUCTION" "CLUSTER_ZONE_PRODUCTION" "KUPDATE_SCRIPT"; do
          if [ -z "${!var}" ]; then
            echo "Missing '${var}' variable!"
            exit 1
          fi
      done